{"version":3,"sources":["config.js","components/MyNavbar.js","components/Home.js","components/auth/Signin.js","components/auth/Signup.js","components/ChatBox.js","components/chess/MyMoves.js","components/chess/MyEngineBoard.js","components/chess/MyHumanBoard.js","components/Game.js","components/user/PrivateProfile.js","components/App.js","index.js"],"names":["API_URL","URL","MyNavbar","props","Nav","className","to","loggedUser","onClick","onLogout","_id","username","Home","Button","size","variant","src","uuidv4","Signin","useEffect","onUnmount","onSubmit","onSignin","name","type","errorMsg","style","color","Signup","socket","onSignup","errorMessage","CONNECTION_PORT","ChatBox","room","match","params","id","userName","useState","message","setMessage","messageList","setMessageList","io","emit","on","data","sendMessage","a","messageContent","content","author","map","val","placeholder","onChange","e","target","value","MyMoves","ListGroup","turn","Item","moves","boardStyle","borderRadius","boxShadow","STOCKFISH","window","game","Chess","HumanVsStockfish","state","fen","history","onDrop","sourceSquare","targetSquare","move","from","promotion","Promise","resolve","setState","then","engineGame","prepareMove","options","announced_game_over","engine","Worker","stockfishjs","evaler","engineStatus","time","wtime","btime","winc","binc","clockTimeoutID","uciCmd","cmd","which","postMessage","clockTick","t","clockColor","startTime","Date","now","setTimeout","get_moves","verbose","i","length","setInterval","game_over","clearTimeout","elapsed","Math","max","stopClock","depth","nodes","onmessage","event","line","substr","engineLoaded","engineReady","search","score","parseInt","toFixed","abs","start","this","pgn","console","log","children","position","Component","MyEngineBoard","roomId","playerColor","width","orientation","HumanVsHuman","setFen","dropSquareStyle","setDropSquareStyle","squareStyles","setSquareStyles","pieceSquare","setHistory","movesPGN","setMovesPGN","setTurn","setOrientation","white","setWhite","black","setBlack","spectator","loggedUser_id","push","load_pgn","handleMouseOverSquare","square","squaresToHighlight","highlightStyles","reduce","c","background","squareStyling","highlightSquare","handleMouseOutSquare","handleDrop","handleSquareRightClick","backgroundColor","handleDragOverSquare","Spinner","animation","role","MyHumanBoard","onMouseOverSquare","onMouseOutSquare","onSquareRightClick","onDragOverSquare","Game","path","PrivateProfile","games","setGames","axios","get","withCredentials","res","movetext","withRouter","setLoggedUser","setErrorMsg","handleSignup","preventDefault","email","password","post","catch","err","response","error","handleSignin","handleUnmount","exact","render","routeProps","PublicProfile","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15b03c91.chunk.js","sourcesContent":["// Testing.\r\nexport const API_URL = \"http://localhost:5000/api\";\r\nexport const URL = \"http://localhost:5000/\";\r\n\r\n// Deployment.\r\n// export const API_URL = \"https://ironchess.herokuapp.com/api\";\r\n// export const URL = \"https://ironchess.herokuapp.com/\";\r\n","// Setup.\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Styles.\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"../styles/MyNavbar.css\";\r\n\r\n// Rendering function.\r\nfunction MyNavbar(props) {\r\n  return (\r\n    <Nav className=\"myNav\">\r\n      <Link to=\"/\">IronChess</Link>\r\n      {props.loggedUser ? (\r\n        <>\r\n          <Link onClick={props.onLogout}>Log out</Link>\r\n          <Link to={`/private/${props.loggedUser._id}`}>\r\n            {props.loggedUser.username}\r\n          </Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Link to=\"/signin\">Sign in</Link>\r\n          <Link to=\"/signup\">Sign up</Link>\r\n        </>\r\n      )}\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default MyNavbar;\r\n","/*      Home.     */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Styles.\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../styles/Home.css\";\r\n\r\n// Rendering function.\r\nfunction Home(props) {\r\n  let color = \"w\";\r\n\r\n  return (\r\n    <div className=\"myHome\">\r\n      {/* Select time control */}\r\n      <h1 className=\"myTitle\">New game</h1>\r\n\r\n      <div className=\"selectButtons\">\r\n        <Link to=\"/stockfish\">\r\n          <Button size=\"lg\" variant=\"dark\">\r\n            <img src=\"https://i.imgur.com/jyTRjkY.png\" />\r\n          </Button>\r\n        </Link>\r\n\r\n        <Link to={`/game/${uuidv4()}/${color}`}>\r\n          <Button size=\"lg\" variant=\"light\">\r\n            <img src=\"https://i.imgur.com/PBtKjOl.png\" />\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/*    Sign in.    */\r\nimport React, { useEffect } from \"react\";\r\n\r\n// Rendering function.\r\nfunction Signin(props) {\r\n  useEffect(() => {\r\n    return props.onUnmount;\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={props.onSignin}>\r\n      <div className=\"form-group\">\r\n        <label>Email address</label>\r\n        <input name=\"email\" type=\"text\" />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input name=\"password\" type=\"password\" />\r\n      </div>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n\r\n      {/*    In case of error.    */}\r\n      {props.errorMsg ? <p style={{ color: \"red\" }}>{props.errorMsg}</p> : null}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","/*    Sign up.    */\r\nimport React from \"react\";\r\n\r\n// Rendering function.\r\nfunction Signup(props) {\r\n  return (\r\n    <form onSubmit={props.onSignup}>\r\n      <div className=\"form-group\">\r\n        <label>Username</label>\r\n        <input name=\"username\" type=\"text\" />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Email address</label>\r\n        <input name=\"email\" type=\"text\" />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input name=\"password\" type=\"password\" />\r\n      </div>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n\r\n      {/*    In case of error.    */}\r\n      {props.errorMessage ? (\r\n        <p style={{ color: \"red\" }}>{props.errorMessage}</p>\r\n      ) : null}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"../styles/ChatBox.css\";\r\n\r\nimport { URL } from \"../config\";\r\nlet socket;\r\nconst CONNECTION_PORT = `${URL}`;\r\n\r\nfunction ChatBox(props) {\r\n  if (!props.loggedUser) {\r\n    //show loading screen or\r\n    return null;\r\n  }\r\n\r\n  const room = props.match.params.id;\r\n  const userName = props.loggedUser.username;\r\n\r\n  // After Login\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket = io(CONNECTION_PORT);\r\n    socket.emit(\"join_room\", room);\r\n  }, [CONNECTION_PORT]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      setMessageList([...messageList, data]);\r\n    });\r\n  });\r\n\r\n  const sendMessage = async () => {\r\n    let messageContent = {\r\n      room: room,\r\n      content: {\r\n        author: userName,\r\n        message: message,\r\n      },\r\n    };\r\n\r\n    await socket.emit(\"send_message\", messageContent);\r\n    setMessageList([...messageList, messageContent.content]);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"ChatBox\">\r\n      <div className=\"chatContainer\">\r\n        <div className=\"messages\">\r\n          {messageList.map((val) => {\r\n            return (\r\n              <div\r\n                className=\"messageContainer\"\r\n                id={val.author == userName ? \"You\" : \"Other\"}\r\n              >\r\n                <div className=\"messageIndividual\">\r\n                  {val.author}: {val.message}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"messageInputs\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Message...\"\r\n            onChange={(e) => {\r\n              setMessage(e.target.value);\r\n            }}\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n","// Setup.\r\nimport React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n// Styles.\r\nimport \"../../styles/MyMoves.css\";\r\n\r\n// Rendering function.\r\nfunction MyMoves(props) {\r\n  return (\r\n    <ListGroup className=\"myListGroup\">\r\n      {props.turn === \"w\" ? (\r\n        <ListGroup.Item variant=\"light\">White to move.</ListGroup.Item>\r\n      ) : (\r\n        <ListGroup.Item variant=\"dark\">Black to move.</ListGroup.Item>\r\n      )}\r\n      <ListGroup.Item variant=\"info\" className=\"myMovesList\">\r\n        {props.moves}\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default MyMoves;\r\n","/*    Human vs. Stockfish    */\n\n// Setup.\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Chess from \"chess.js\";\nimport Chessboard from \"chessboardjsx\";\nimport MyMoves from \"./MyMoves\";\n\n// Styles.\nimport \"../../styles/MyBoard.css\";\nimport { Button } from \"react-bootstrap\";\n\nconst boardStyle = {\n  borderRadius: \"5px\",\n  boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n};\n\nconst STOCKFISH = window.STOCKFISH;\n\n// Initialising game.\nconst game = new Chess();\n\nclass HumanVsStockfish extends Component {\n  static propTypes = { children: PropTypes.func };\n\n  state = {\n    // Starting position.\n    fen: \"start\",\n    // Array of past game moves.\n    history: [],\n    // Moves in PNG format.\n    moves: \"\",\n    // Turn.\n    turn: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      fen: game.fen(),\n    });\n\n    this.engineGame().prepareMove();\n  }\n\n  componentDidUpdate() {\n    this.moves = game.pgn();\n\n    if (game.turn() === \"w\") {\n      this.turn = \"White to move.\";\n    } else {\n      this.turn = \"Black to move.\";\n    }\n    console.log(this.moves);\n    console.log(this.turn);\n  }\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    // see if the move is legal\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",\n    });\n\n    // Illegal move\n    if (move === null) return;\n\n    return new Promise((resolve) => {\n      this.setState({ fen: game.fen() });\n      resolve();\n    }).then(() => this.engineGame().prepareMove());\n  };\n\n  engineGame = (options) => {\n    options = options || {};\n\n    /// We can load Stockfish via Web Workers or via STOCKFISH() if loaded from a <script> tag.\n    let engine =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n    let evaler =\n      typeof STOCKFISH === \"function\"\n        ? STOCKFISH()\n        : new Worker(options.stockfishjs || \"stockfish.js\");\n    let engineStatus = {};\n    let time = { wtime: 3000, btime: 3000, winc: 1500, binc: 1500 };\n    let playerColor = \"black\";\n    let clockTimeoutID = null;\n    // let isEngineRunning = false;\n    let announced_game_over;\n    // do not pick up pieces if the game is over\n    // only pick up pieces for White\n\n    setInterval(function () {\n      if (announced_game_over) {\n        return;\n      }\n\n      if (game.game_over()) {\n        announced_game_over = true;\n      }\n    }, 500);\n\n    function uciCmd(cmd, which) {\n      // console.log('UCI: ' + cmd);\n\n      (which || engine).postMessage(cmd);\n    }\n    uciCmd(\"uci\");\n\n    function clockTick() {\n      let t =\n        (time.clockColor === \"white\" ? time.wtime : time.btime) +\n        time.startTime -\n        Date.now();\n      let timeToNextSecond = (t % 1000) + 1;\n      clockTimeoutID = setTimeout(clockTick, timeToNextSecond);\n    }\n\n    function stopClock() {\n      if (clockTimeoutID !== null) {\n        clearTimeout(clockTimeoutID);\n        clockTimeoutID = null;\n      }\n      if (time.startTime > 0) {\n        let elapsed = Date.now() - time.startTime;\n        time.startTime = null;\n        if (time.clockColor === \"white\") {\n          time.wtime = Math.max(0, time.wtime - elapsed);\n        } else {\n          time.btime = Math.max(0, time.btime - elapsed);\n        }\n      }\n    }\n\n    function startClock() {\n      if (game.turn() === \"w\") {\n        time.wtime += time.winc;\n        time.clockColor = \"white\";\n      } else {\n        time.btime += time.binc;\n        time.clockColor = \"black\";\n      }\n      time.startTime = Date.now();\n      clockTick();\n    }\n\n    function get_moves() {\n      let moves = \"\";\n      let history = game.history({ verbose: true });\n\n      for (let i = 0; i < history.length; ++i) {\n        let move = history[i];\n        moves +=\n          \" \" + move.from + move.to + (move.promotion ? move.promotion : \"\");\n      }\n\n      return moves;\n    }\n\n    const prepareMove = () => {\n      stopClock();\n      // this.setState({ fen: game.fen() });\n      let turn = game.turn() === \"w\" ? \"white\" : \"black\";\n      if (!game.game_over()) {\n        // if (turn === playerColor) {\n        if (turn !== playerColor) {\n          // playerColor = playerColor === 'white' ? 'black' : 'white';\n          uciCmd(\"position startpos moves\" + get_moves());\n          uciCmd(\"position startpos moves\" + get_moves(), evaler);\n          uciCmd(\"eval\", evaler);\n\n          if (time && time.wtime) {\n            uciCmd(\n              \"go \" +\n                (time.depth ? \"depth \" + time.depth : \"\") +\n                \" wtime \" +\n                time.wtime +\n                \" winc \" +\n                time.winc +\n                \" btime \" +\n                time.btime +\n                \" binc \" +\n                time.binc\n            );\n          } else {\n            uciCmd(\"go \" + (time.depth ? \"depth \" + time.depth : \"\"));\n          }\n          // isEngineRunning = true;\n        }\n        if (game.history().length >= 2 && !time.depth && !time.nodes) {\n          startClock();\n        }\n      }\n    };\n\n    evaler.onmessage = function (event) {\n      let line;\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n\n      // console.log('evaler: ' + line);\n\n      /// Ignore some output.\n      if (\n        line === \"uciok\" ||\n        line === \"readyok\" ||\n        line.substr(0, 11) === \"option name\"\n      ) {\n        return;\n      }\n    };\n\n    engine.onmessage = (event) => {\n      let line;\n\n      if (event && typeof event === \"object\") {\n        line = event.data;\n      } else {\n        line = event;\n      }\n      // console.log('Reply: ' + line);\n      if (line === \"uciok\") {\n        engineStatus.engineLoaded = true;\n      } else if (line === \"readyok\") {\n        engineStatus.engineReady = true;\n      } else {\n        let match = line.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbn])?/);\n        /// Did the AI move?\n        if (match) {\n          // isEngineRunning = false;\n          game.move({ from: match[1], to: match[2], promotion: match[3] });\n          this.setState({ fen: game.fen() });\n          prepareMove();\n          uciCmd(\"eval\", evaler);\n          //uciCmd(\"eval\");\n          /// Is it sending feedback?\n        } else if (\n          (match = line.match(/^info .*\\bdepth (\\d+) .*\\bnps (\\d+)/))\n        ) {\n          engineStatus.search = \"Depth: \" + match[1] + \" Nps: \" + match[2];\n        }\n\n        /// Is it sending feed back with a score?\n        if ((match = line.match(/^info .*\\bscore (\\w+) (-?\\d+)/))) {\n          let score = parseInt(match[2], 10) * (game.turn() === \"w\" ? 1 : -1);\n          /// Is it measuring in centipawns?\n          if (match[1] === \"cp\") {\n            engineStatus.score = (score / 100.0).toFixed(2);\n            /// Did it find a mate?\n          } else if (match[1] === \"mate\") {\n            engineStatus.score = \"Mate in \" + Math.abs(score);\n          }\n\n          /// Is the score bounded?\n          if ((match = line.match(/\\b(upper|lower)bound\\b/))) {\n            engineStatus.score =\n              ((match[1] === \"upper\") === (game.turn() === \"w\")\n                ? \"<= \"\n                : \">= \") + engineStatus.score;\n          }\n        }\n      }\n      // displayStatus();\n    };\n\n    return {\n      start: function () {\n        uciCmd(\"ucinewgame\");\n        uciCmd(\"isready\");\n        engineStatus.engineReady = false;\n        engineStatus.search = null;\n        prepareMove();\n        announced_game_over = false;\n      },\n      prepareMove: function () {\n        prepareMove();\n      },\n    };\n  };\n\n  render() {\n    const { fen } = this.state;\n    return this.props.children({\n      position: fen,\n      onDrop: this.onDrop,\n      moves: this.moves,\n      turn: this.turn,\n    });\n  }\n}\n\nfunction MyEngineBoard() {\n  return (\n    <div className=\"myGamespace\">\n      <HumanVsStockfish>\n        {({ position, onDrop, moves, turn }) => (\n          <div className=\"myChessboard\">\n            <Chessboard\n              id=\"stockfish\"\n              position={position}\n              width={550}\n              onDrop={onDrop}\n              boardStyle={boardStyle}\n              orientation=\"black\"\n            />\n\n            <MyMoves moves={moves} turn={turn}></MyMoves>\n          </div>\n        )}\n      </HumanVsStockfish>\n    </div>\n  );\n}\n\nexport default MyEngineBoard;\n","/*    Human vs. Human    */\r\n\r\n// Setup.\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Chess from \"chess.js\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport MyMoves from \"./MyMoves\";\r\nimport io from \"socket.io-client\";\r\nimport { URL } from \"../../config\";\r\n\r\n// Styles.\r\nimport \"../../styles/MyBoard.css\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n// Variables.\r\nlet roomId;\r\nlet socket;\r\nlet game;\r\nlet playerColor;\r\nconst CONNECTION_PORT = `${URL}`;\r\n\r\nfunction HumanVsHuman(props) {\r\n  // Hooks.\r\n  const [fen, setFen] = useState(\"start\");\r\n  const [dropSquareStyle, setDropSquareStyle] = useState({});\r\n  const [squareStyles, setSquareStyles] = useState({});\r\n  const [pieceSquare, setPieceSquare] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [movesPGN, setMovesPGN] = useState(\"\");\r\n  const [turn, setTurn] = useState(\"w\");\r\n  const [orientation, setOrientation] = useState(\"\");\r\n  const [white, setWhite] = useState(\"\");\r\n  const [black, setBlack] = useState(\"\");\r\n  const [spectator, setSpectator] = useState([]);\r\n\r\n  // componentDidMount.\r\n  useEffect(() => {\r\n    game = Chess();\r\n    socket = io(CONNECTION_PORT);\r\n    roomId = props.match.params.id;\r\n    playerColor = props.match.params.color;\r\n\r\n    if (playerColor === \"w\" && white.length === 0) {\r\n      setOrientation(\"white\");\r\n      setWhite(props.loggedUser_id);\r\n      socket.emit(\"join_game\", { roomId, white: props.loggedUser._id });\r\n    } else if (playerColor === \"b\" && black.length === 0) {\r\n      setOrientation(\"black\");\r\n      setBlack(props.loggedUser_id);\r\n      socket.emit(\"join_game\", { roomId, black: props.loggedUser._id });\r\n    } else {\r\n      spectator.push(props.loggedUser._id);\r\n    }\r\n  }, []);\r\n\r\n  // componentDidUpdate.\r\n  useEffect(() => {\r\n    socket.on(\"receive_info\", (data) => {\r\n      console.log(\"Information received.\", data);\r\n\r\n      setFen(data.position);\r\n      setMovesPGN(data.moves);\r\n      setTurn(data.turn);\r\n      game.load_pgn(data.moves);\r\n    });\r\n  });\r\n\r\n  // Keeps clicked square style and removes hint squares.\r\n  const removeHighlightSquare = () => {\r\n    setSquareStyles(squareStyling({ pieceSquare, history }));\r\n  };\r\n\r\n  // Shows possible moves.\r\n  const highlightSquare = (sourceSquare, squaresToHighlight) => {\r\n    const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\r\n      (a, c) => {\r\n        return {\r\n          ...a,\r\n          ...{\r\n            [c]: {\r\n              background:\r\n                \"radial-gradient(circle, #fffc00 36%, transparent 40%)\",\r\n              borderRadius: \"50%\",\r\n            },\r\n          },\r\n          ...squareStyling({\r\n            history: history,\r\n            pieceSquare: pieceSquare,\r\n          }),\r\n        };\r\n      },\r\n      {}\r\n    );\r\n\r\n    setSquareStyles({ ...squareStyles, ...highlightStyles });\r\n  };\r\n\r\n  const handleDrop = ({ sourceSquare, targetSquare }) => {\r\n    if (playerColor !== game.turn()) {\r\n      return;\r\n    }\r\n\r\n    let move = game.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: \"q\", // Always promotes to a queen.\r\n    });\r\n\r\n    if (move === null) return;\r\n\r\n    setFen(game.fen());\r\n    setHistory(game.history({ verbose: true }));\r\n    setMovesPGN(game.pgn());\r\n    setTurn(game.turn());\r\n    setSquareStyles(squareStyling({ pieceSquare, history }));\r\n\r\n    socket.emit(\"send_game_info\", {\r\n      room: roomId,\r\n      moves: game.pgn(),\r\n      position: game.fen(),\r\n      turn: game.turn(),\r\n    });\r\n  };\r\n\r\n  const handleMouseOverSquare = (square) => {\r\n    // Gets list of possible moves for this square.\r\n    let moves = game.moves({\r\n      square: square,\r\n      verbose: true,\r\n    });\r\n\r\n    // Exits if there are no moves available for this square.\r\n    if (moves.length === 0) return;\r\n\r\n    let squaresToHighlight = [];\r\n\r\n    for (var i = 0; i < moves.length; i++) {\r\n      squaresToHighlight.push(moves[i].to);\r\n    }\r\n\r\n    highlightSquare(square, squaresToHighlight);\r\n  };\r\n\r\n  const handleMouseOutSquare = (square) => removeHighlightSquare(square);\r\n\r\n  // Central squares get diferents `dropSquareStyles`.\r\n  const handleDragOverSquare = (square) => {\r\n    setDropSquareStyle(\r\n      square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\r\n        ? { backgroundColor: \"cornFlowerBlue\" }\r\n        : { boxShadow: \"inset 0 0 1px 4px rgb(255, 255, 0)\" }\r\n    );\r\n  };\r\n\r\n  const handleSquareRightClick = (square) =>\r\n    setSquareStyles({ [square]: { backgroundColor: \"deepPink\" } });\r\n\r\n  // Loading spinner.\r\n  if (!props.loggedUser) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\" variant=\"light\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return props.children({\r\n    position: fen,\r\n    handleMouseOverSquare,\r\n    handleMouseOutSquare,\r\n    handleDrop,\r\n    handleSquareRightClick,\r\n    handleDragOverSquare,\r\n    dropSquareStyle,\r\n    squareStyles,\r\n    moves: movesPGN,\r\n    turn,\r\n    orientation,\r\n  });\r\n}\r\n\r\nfunction MyHumanBoard(props) {\r\n  return (\r\n    <HumanVsHuman {...props}>\r\n      {({\r\n        position,\r\n        handleDrop,\r\n        handleMouseOverSquare,\r\n        handleMouseOutSquare,\r\n        handleDragOverSquare,\r\n        handleSquareRightClick,\r\n        squareStyles,\r\n        dropSquareStyle,\r\n        moves,\r\n        turn,\r\n        orientation,\r\n      }) => (\r\n        <div className=\"myChessboard\">\r\n          <Chessboard\r\n            id=\"HumanVsHuman\"\r\n            width={550}\r\n            orientation={orientation}\r\n            position={position}\r\n            onDrop={handleDrop}\r\n            onMouseOverSquare={handleMouseOverSquare}\r\n            onMouseOutSquare={handleMouseOutSquare}\r\n            onSquareRightClick={handleSquareRightClick}\r\n            onDragOverSquare={handleDragOverSquare}\r\n            squareStyles={squareStyles}\r\n            dropSquareStyle={dropSquareStyle}\r\n            boardStyle={{\r\n              borderRadius: \"5px\",\r\n              boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\r\n            }}\r\n          />\r\n\r\n          <div className=\"movesAndButton\">\r\n            <MyMoves moves={moves} turn={turn}></MyMoves>\r\n            <Button>Resign</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </HumanVsHuman>\r\n  );\r\n}\r\n\r\n// Square styling.\r\nconst squareStyling = ({ pieceSquare, history }) => {\r\n  const sourceSquare = history.length && history[history.length - 1].from;\r\n  const targetSquare = history.length && history[history.length - 1].to;\r\n\r\n  return {\r\n    [pieceSquare]: { backgroundColor: \"rgba(255, 255, 0, 0.4)\" },\r\n    ...(history.length && {\r\n      [sourceSquare]: {\r\n        backgroundColor: \"rgba(255, 255, 0, 0.4)\",\r\n      },\r\n    }),\r\n    ...(history.length && {\r\n      [targetSquare]: {\r\n        backgroundColor: \"rgba(255, 255, 0, 0.4)\",\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\nexport default MyHumanBoard;\r\n","/*    Game room.    */\r\n\r\n// Setup.\r\nimport React from \"react\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport MyEngineBoard from \"./chess/MyEngineBoard\";\r\nimport MyHumanBoard from \"./chess/MyHumanBoard\";\r\n\r\nfunction Game(props) {\r\n  if (!props.loggedUser) {\r\n    //show loading screen or\r\n    return null;\r\n  }\r\n\r\n  return props.match.path === \"/stockfish\" ? (\r\n    <>\r\n      <MyEngineBoard />\r\n    </>\r\n  ) : (\r\n    <>\r\n      <ChatBox loggedUser={props.loggedUser} {...props} />\r\n      <MyHumanBoard loggedUser={props.loggedUser} {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Spinner, Card, ListGroup } from \"react-bootstrap\";\r\nimport { API_URL } from \"../../config\";\r\n\r\nfunction PrivateProfile() {\r\n  const [games, setGames] = useState([]);\r\n\r\n  // componentDidMount.\r\n  useEffect(() => {\r\n    axios.get(`${API_URL}/games`, { withCredentials: true }).then((res) => {\r\n      setGames(res.data);\r\n      console.log(games);\r\n    });\r\n  }, []);\r\n\r\n  // Loading spinner.\r\n  if (!games.length) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\" variant=\"light\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"myGamesList\">\r\n      {games.map((game) => {\r\n        return (\r\n          <div>\r\n            <p>{game.roomId}</p>\r\n            <p>{game.white}</p>\r\n            <p>{game.movetext}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivateProfile;\r\n","// Setup.\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport { API_URL } from \"../config\";\r\n\r\n// Components.\r\nimport MyNavbar from \"./MyNavbar\";\r\nimport Home from \"./Home\";\r\nimport Signin from \"./auth/Signin\";\r\nimport Signup from \"./auth/Signup\";\r\nimport Game from \"./Game\";\r\nimport PrivateProfile from \"./user/PrivateProfile\";\r\n\r\n/* ---------- App. ---------- */\r\nfunction App(props) {\r\n  const [loggedUser, setLoggedUser] = useState(null);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n  // componentDidMount.\r\n  useEffect(() => {\r\n    if (!loggedUser) {\r\n      axios.get(`${API_URL}/user`, { withCredentials: true }).then((res) => {\r\n        setLoggedUser(res.data);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // componentDidUpdate.\r\n  // useEffect(() => {\r\n  //   console.log(\"Sign in!\");\r\n  //   console.log(loggedUser);\r\n  //   console.log(props.history);\r\n  //   props.history.push(\"/\");\r\n  // }, [loggedUser]);\r\n\r\n  // Sign up.\r\n  const handleSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { username, email, password } = e.target;\r\n\r\n    axios\r\n      .post(\r\n        `${API_URL}/signup`,\r\n        {\r\n          username: username.value,\r\n          email: email.value,\r\n          password: password.value,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        setLoggedUser(res.data);\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setErrorMsg(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  // Sign in.\r\n  const handleSignin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = e.target;\r\n\r\n    axios\r\n      .post(\r\n        `${API_URL}/signin`,\r\n        {\r\n          email: email.value,\r\n          password: password.value,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        setLoggedUser(res.data);\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setErrorMsg(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  // Log out.\r\n  const handleLogout = (e) => {\r\n    axios.post(`${API_URL}/logout`, {}, { withCredentials: true }).then(() => {\r\n      setLoggedUser(null);\r\n      props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  // Unmounts `errorMsg`.\r\n  const handleUnmount = () => {\r\n    setErrorMsg(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"myApp\">\r\n      <header>\r\n        <MyNavbar loggedUser={loggedUser} onLogout={handleLogout} />\r\n      </header>\r\n\r\n      <main>\r\n        <Switch>\r\n          {/* Home. */}\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return <Home loggedUser={loggedUser} />;\r\n            }}\r\n          />\r\n\r\n          {/* Sign in. */}\r\n          <Route\r\n            path=\"/signin\"\r\n            render={(routeProps) => {\r\n              return (\r\n                <Signin\r\n                  onUnmount={handleUnmount}\r\n                  errorMsg={errorMsg}\r\n                  onSignin={handleSignin}\r\n                  {...routeProps}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n\r\n          {/* Sign up. */}\r\n          <Route\r\n            path=\"/signup\"\r\n            render={(routeProps) => {\r\n              return <Signup onSignup={handleSignup} {...routeProps} />;\r\n            }}\r\n          />\r\n\r\n          {/* Private profile. */}\r\n          <Route\r\n            path=\"/private/:id\"\r\n            render={() => {\r\n              return <PrivateProfile loggedUser={loggedUser} />;\r\n            }}\r\n          />\r\n\r\n          {/* Public profile. */}\r\n          <Route\r\n            path=\"/public/:id\"\r\n            render={() => {\r\n              return <PublicProfile loggedUser={loggedUser} />;\r\n            }}\r\n          />\r\n\r\n          {/* Game. */}\r\n          <Route\r\n            path=\"/stockfish\"\r\n            render={(routeProps) => {\r\n              return <Game loggedUser={loggedUser} {...routeProps} />;\r\n            }}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/game/:id/:color\"\r\n            render={(routeProps) => {\r\n              return <Game loggedUser={loggedUser} {...routeProps} />;\r\n            }}\r\n          />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","// Setup.\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\n\r\n// Styles.\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\n\r\n// Rendering function.\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}